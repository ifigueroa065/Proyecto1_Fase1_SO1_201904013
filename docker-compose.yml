services:
  db:
    build:
      context: ./DB
      dockerfile: Dockerfile
    container_name: dbmetrics
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - metricsnet

  api:
    build:
      context: ./Backend/API
      dockerfile: Dockerfile
    container_name: api-metrics
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    depends_on:
      - db
    ports:
      - "${API_PORT}:3000"
    networks:
      - metricsnet

  recolector:
    build:
      context: ./Backend/Recolector
      dockerfile: Dockerfile
    container_name: go-recolector
    environment:
      API_HOST: api
      API_PORT: 3000
      RECOLECTOR_PORT: ${RECOLECTOR_PORT}
    depends_on:
      - api
    ports:
      - "${RECOLECTOR_PORT}:8080"
    networks:
      - metricsnet

  frontend:
    build:
      context: ./Frontend/Metrics
      dockerfile: Dockerfile
    container_name: angular-metrics
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - api
    networks:
      - metricsnet
    environment:
      API_URL: http://api:3000/metrics  # Solo si lo usas en environment.ts

volumes:
  postgres_data:

networks:
  metricsnet:
    driver: bridge
